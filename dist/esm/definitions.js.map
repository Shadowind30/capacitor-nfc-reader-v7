{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"AAOA,MAAM,CAAN,IAAY,UAMX;AAND,WAAY,UAAU;IACpB,+BAAiB,CAAA;IACjB,+BAAiB,CAAA;IACjB,mCAAqB,CAAA;IACrB,iCAAmB,CAAA;IACnB,iCAAmB,CAAA;AACrB,CAAC,EANW,UAAU,KAAV,UAAU,QAMrB","sourcesContent":["import type { PluginListenerHandle } from '@capacitor/core';\n\nexport interface NFCTag {\n  id: string;\n  type: NFCTagType;\n}\n\nexport enum NFCTagType {\n  MIFARE = 'MIFARE',\n  FeliCa = 'FeliCa',\n  ISO15693 = 'ISO15693',\n  ISO7816 = 'ISO7816',\n  Unknown = 'Unknown'\n}\n\nexport interface NFCError {\n  code: string;\n  message: string;\n}\n\nexport interface NFCReaderPlugin {\n  initialize(): Promise<{ value: boolean }>;\n  startScanning(): Promise<void>;\n  stopScanning(): Promise<void>;\n  addListener(\n    eventName: 'nfcTagDetected',\n    listenerFunc: (tag: NFCTag) => void,\n  ): Promise<PluginListenerHandle>;\n  addListener(\n    eventName: 'nfcError',\n    listenerFunc: (error: NFCError) => void,\n  ): Promise<PluginListenerHandle>;\n  removeAllListeners(): Promise<void>;\n}\n"]}